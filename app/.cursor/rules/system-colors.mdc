---
description: 
globs: 
alwaysApply: false
---
This app's UI is heavily apple-focused, do your best do adhere to apple standard guidelines.
These colors are the standard ones from Apple and are imported in tailwaind (using NativeWind)

to use one of them just prepend the use. Example for background: bg-system-background . Example for text-color: text-secondary-label.


const configColors = {
  red: {
    50: "#fef2f2",
    100: "#fee2e2",
    200: "#fecaca",
    300: "#fca5a5",
    400: "#f87171",
    500: "#ef4444",
    600: "#dc2626",
    700: "#b91c1c",
    800: "#991b1b",
    900: "#7f1d1d",
    950: "#450a0a",
    DEFAULT: "rgb(var(--color-red) / <alpha-value>)",
  },
  orange: {
    50: "#fff7ed",
    100: "#ffedd5",
    200: "#fed7aa",
    300: "#fdba74",
    400: "#fb923c",
    500: "#f97316",
    600: "#ea580c",
    700: "#c2410c",
    800: "#9a3412",
    900: "#7c2d12",
    950: "#431407",
    DEFAULT: "rgb(var(--color-orange) / <alpha-value>)",
  },
  yellow: {
    50: "#fefce8",
    100: "#fef9c3",
    200: "#fef08a",
    300: "#fde047",
    400: "#facc15",
    500: "#eab308",
    600: "#ca8a04",
    700: "#a16207",
    800: "#854d0e",
    900: "#713f12",
    950: "#422006",
    DEFAULT: "rgb(var(--color-yellow) / <alpha-value>)",
  },
  green: {
    50: "#f0fdf4",
    100: "#dcfce7",
    200: "#bbf7d0",
    300: "#86efac",
    400: "#4ade80",
    500: "#22c55e",
    600: "#16a34a",
    700: "#15803d",
    800: "#166534",
    900: "#14532d",
    950: "#052e16",
    DEFAULT: "rgb(var(--color-green) / <alpha-value>)",
  },
  mint: "rgb(var(--color-mint) / <alpha-value>)",
  teal: {
    50: "#f0fdfa",
    100: "#ccfbf1",
    200: "#99f6e4",
    300: "#5eead4",
    400: "#2dd4bf",
    500: "#14b8a6",
    600: "#0d9488",
    700: "#0f766e",
    800: "#115e59",
    900: "#134e4a",
    950: "#042f2e",
    DEFAULT: "rgb(var(--color-teal) / <alpha-value>)",
  },
  cyan: {
    50: "#ecfeff",
    100: "#cffafe",
    200: "#a5f3fc",
    300: "#67e8f9",
    400: "#22d3ee",
    500: "#06b6d4",
    600: "#0891b2",
    700: "#0e7490",
    800: "#155e75",
    900: "#164e63",
    950: "#083344",
    DEFAULT: "rgb(var(--color-cyan) / <alpha-value>)",
  },
  blue: {
    50: "#eff6ff",
    100: "#dbeafe",
    200: "#bfdbfe",
    300: "#93c5fd",
    400: "#60a5fa",
    500: "#3b82f6",
    600: "#2563eb",
    700: "#1d4ed8",
    800: "#1e40af",
    900: "#1e3a8a",
    950: "#172554",
    DEFAULT: "rgb(var(--color-blue) / <alpha-value>)",
  },
  indigo: {
    50: "#eef2ff",
    100: "#e0e7ff",
    200: "#c7d2fe",
    300: "#a5b4fc",
    400: "#818cf8",
    500: "#6366f1",
    600: "#4f46e5",
    700: "#4338ca",
    800: "#3730a3",
    900: "#312e81",
    950: "#1e1b4b",
    DEFAULT: "rgb(var(--color-indigo) / <alpha-value>)",
  },
  purple: {
    50: "#faf5ff",
    100: "#f3e8ff",
    200: "#e9d5ff",
    300: "#d8b4fe",
    400: "#c084fc",
    500: "#a855f7",
    600: "#9333ea",
    700: "#7e22ce",
    800: "#6b21a8",
    900: "#581c87",
    950: "#3b0764",
    DEFAULT: "rgb(var(--color-purple) / <alpha-value>)",
  },
  pink: {
    50: "#fdf2f8",
    100: "#fce7f3",
    200: "#fbcfe8",
    300: "#f9a8d4",
    400: "#f472b6",
    500: "#ec4899",
    600: "#db2777",
    700: "#be185d",
    800: "#9d174d",
    900: "#831843",
    950: "#500724",
    DEFAULT: "rgb(var(--color-pink) / <alpha-value>)",
  },
  brown: "rgb(var(--color-brown) / <alpha-value>)",
  gray: {
    2: "rgb(var(--color-gray2) / <alpha-value>)",
    3: "rgb(var(--color-gray3) / <alpha-value>)",
    4: "rgb(var(--color-gray4) / <alpha-value>)",
    5: "rgb(var(--color-gray5) / <alpha-value>)",
    6: "rgb(var(--color-gray6) / <alpha-value>)",
    50: "#f9fafb",
    100: "#f3f4f6",
    200: "#e5e7eb",
    300: "#d1d5db",
    400: "#9ca3af",
    500: "#6b7280",
    600: "#4b5563",
    700: "#374151",
    800: "#1f2937",
    900: "#111827",
    950: "#030712",
    DEFAULT: "rgb(var(--color-gray) / <alpha-value>)",
  },
  "placeholder-text": "rgb(var(--color-placeholderText) / <alpha-value>)",
  separator: "rgba(var(--color-separator))",
  "opaque-separator": "rgb(var(--color-opaqueSeparator) / <alpha-value>)",
  "non-opaque-separator": "rgba(var(--color-nonOpaqueSeparator))",
  link: "rgb(var(--color-link) / <alpha-value>)",
  "system-background": "rgb(var(--color-systemBackground) / <alpha-value>)",
  "secondary-system-background":
    "rgb(var(--color-secondarySystemBackground) / <alpha-value>)",
  "tertiary-system-background":
    "rgb(var(--color-tertiarySystemBackground) / <alpha-value>)",
  "system-grouped-background":
    "rgb(var(--color-systemGroupedBackground) / <alpha-value>)",
  "secondary-system-grouped-background":
    "rgb(var(--color-secondarySystemGroupedBackground) / <alpha-value>)",
  "tertiary-system-grouped-background":
    "rgb(var(--color-tertiarySystemGroupedBackground) / <alpha-value>)",
  "system-fill": "rgba(var(--color-systemFill))",
  "secondary-system-fill": "rgba(var(--color-secondarySystemFill))",
  "tertiary-system-fill": "rgba(var(--color-tertiarySystemFill))",
  "quaternary-system-fill": "rgba(var(--color-quaternarySystemFill))",
  label: "rgb(var(--color-label) / <alpha-value>)",
  text: "rgb(var(--color-text) / <alpha-value>)",
  "secondary-label": "rgba(var(--color-secondaryLabel))",
  "tertiary-label": "rgba(var(--color-tertiaryLabel))",
  "quaternary-label": "rgba(var(--color-quaternaryLabel))",
  "red-light": "rgb(var(--color-red-light) / <alpha-value>)",
  "orange-light": "rgb(var(--color-orange-light) / <alpha-value>)",
  "yellow-light": "rgb(var(--color-yellow-light) / <alpha-value>)",
  "green-light": "rgb(var(--color-green-light) / <alpha-value>)",
  "mint-light": "rgb(var(--color-mint-light) / <alpha-value>)",
  "teal-light": "rgb(var(--color-teal-light) / <alpha-value>)",
  "cyan-light": "rgb(var(--color-cyan-light) / <alpha-value>)",
  "blue-light": "rgb(var(--color-blue-light) / <alpha-value>)",
  "indigo-light": "rgb(var(--color-indigo-light) / <alpha-value>)",
  "purple-light": "rgb(var(--color-purple-light) / <alpha-value>)",
  "pink-light": "rgb(var(--color-pink-light) / <alpha-value>)",
  "brown-light": "rgb(var(--color-brown-light) / <alpha-value>)",
  "gray-light": "rgb(var(--color-gray-light) / <alpha-value>)",
  "gray2-light": "rgb(var(--color-gray2-light) / <alpha-value>)",
  "gray3-light": "rgb(var(--color-gray3-light) / <alpha-value>)",
  "gray4-light": "rgb(var(--color-gray4-light) / <alpha-value>)",
  "gray5-light": "rgb(var(--color-gray5-light) / <alpha-value>)",
  "gray6-light": "rgb(var(--color-gray6-light) / <alpha-value>)",
  "placeholder-text-light":
    "rgb(var(--color-placeholderText-light) / <alpha-value>)",
  "separator-light": "rgba(var(--color-separator-light))",
  "opaque-separator-light":
    "rgb(var(--color-opaqueSeparator-light) / <alpha-value>)",
  "non-opaque-separator-light": "rgba(var(--color-nonOpaqueSeparator-light))",
  "link-light": "rgb(var(--color-link-light) / <alpha-value>)",
  "system-background-light":
    "rgb(var(--color-systemBackground-light) / <alpha-value>)",
  "secondary-system-background-light":
    "rgb(var(--color-secondarySystemBackground-light) / <alpha-value>)",
  "tertiary-system-background-light":
    "rgb(var(--color-tertiarySystemBackground-light) / <alpha-value>)",
  "system-grouped-background-light":
    "rgb(var(--color-systemGroupedBackground-light) / <alpha-value>)",
  "secondary-system-grouped-background-light":
    "rgb(var(--color-secondarySystemGroupedBackground-light) / <alpha-value>)",
  "tertiary-system-grouped-background-light":
    "rgb(var(--color-tertiarySystemGroupedBackground-light) / <alpha-value>)",
  "system-fill-light": "rgba(var(--color-systemFill-light))",
  "secondary-system-fill-light": "rgba(var(--color-secondarySystemFill-light))",
  "tertiary-system-fill-light": "rgba(var(--color-tertiarySystemFill-light))",
  "quaternary-system-fill-light":
    "rgba(var(--color-quaternarySystemFill-light))",
  "label-light": "rgb(var(--color-label-light) / <alpha-value>)",
  "text-light": "rgb(var(--color-text-light) / <alpha-value>)",
  "secondary-label-light": "rgba(var(--color-secondaryLabel-light))",
  "tertiary-label-light": "rgba(var(--color-tertiaryLabel-light))",
  "quaternary-label-light": "rgba(var(--color-quaternaryLabel-light))",
  "red-dark": "rgb(var(--color-red-dark) / <alpha-value>)",
  "orange-dark": "rgb(var(--color-orange-dark) / <alpha-value>)",
  "yellow-dark": "rgb(var(--color-yellow-dark) / <alpha-value>)",
  "green-dark": "rgb(var(--color-green-dark) / <alpha-value>)",
  "mint-dark": "rgb(var(--color-mint-dark) / <alpha-value>)",
  "teal-dark": "rgb(var(--color-teal-dark) / <alpha-value>)",
  "cyan-dark": "rgb(var(--color-cyan-dark) / <alpha-value>)",
  "blue-dark": "rgb(var(--color-blue-dark) / <alpha-value>)",
  "indigo-dark": "rgb(var(--color-indigo-dark) / <alpha-value>)",
  "purple-dark": "rgb(var(--color-purple-dark) / <alpha-value>)",
  "pink-dark": "rgb(var(--color-pink-dark) / <alpha-value>)",
  "brown-dark": "rgb(var(--color-brown-dark) / <alpha-value>)",
  "gray-dark": "rgb(var(--color-gray-dark) / <alpha-value>)",
  "gray2-dark": "rgb(var(--color-gray2-dark) / <alpha-value>)",
  "gray3-dark": "rgb(var(--color-gray3-dark) / <alpha-value>)",
  "gray4-dark": "rgb(var(--color-gray4-dark) / <alpha-value>)",
  "gray5-dark": "rgb(var(--color-gray5-dark) / <alpha-value>)",
  "gray6-dark": "rgb(var(--color-gray6-dark) / <alpha-value>)",
  "placeholder-text-dark":
    "rgb(var(--color-placeholderText-dark) / <alpha-value>)",
  "separator-dark": "rgba(var(--color-separator-dark))",
  "opaque-separator-dark":
    "rgb(var(--color-opaqueSeparator-dark) / <alpha-value>)",
  "non-opaque-separator-dark": "rgba(var(--color-nonOpaqueSeparator-dark))",
  "link-dark": "rgb(var(--color-link-dark) / <alpha-value>)",
  "system-background-dark":
    "rgb(var(--color-systemBackground-dark) / <alpha-value>)",
  "secondary-system-background-dark":
    "rgb(var(--color-secondarySystemBackground-dark) / <alpha-value>)",
  "tertiary-system-background-dark":
    "rgb(var(--color-tertiarySystemBackground-dark) / <alpha-value>)",
  "system-grouped-background-dark":
    "rgb(var(--color-systemGroupedBackground-dark) / <alpha-value>)",
  "secondary-system-grouped-background-dark":
    "rgb(var(--color-secondarySystemGroupedBackground-dark) / <alpha-value>)",
  "tertiary-system-grouped-background-dark":
    "rgb(var(--color-tertiarySystemGroupedBackground-dark) / <alpha-value>)",
  "system-fill-dark": "rgba(var(--color-systemFill-dark))",
  "secondary-system-fill-dark": "rgba(var(--color-secondarySystemFill-dark))",
  "tertiary-system-fill-dark": "rgba(var(--color-tertiarySystemFill-dark))",
  "quaternary-system-fill-dark": "rgba(var(--color-quaternarySystemFill-dark))",
  "label-dark": "rgb(var(--color-label-dark) / <alpha-value>)",
  "text-dark": "rgb(var(--color-text-dark) / <alpha-value>)",
  "secondary-label-dark": "rgba(var(--color-secondaryLabel-dark))",
  "tertiary-label-dark": "rgba(var(--color-tertiaryLabel-dark))",
  "quaternary-label-dark": "rgba(var(--color-quaternaryLabel-dark))",
};

export const withUIKit = (config: Config) => {
  config.theme = config.theme || {};
  config.theme.extend = config.theme.extend || {};
  config.theme.extend.colors = config.theme.extend.colors || {};
  config.theme.extend.colors = {
    ...config.theme.extend.colors,
    ...configColors,
  };
  return config;
};

export { configColors as colors };